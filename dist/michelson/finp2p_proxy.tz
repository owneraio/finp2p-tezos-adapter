{ parameter
    (or (or (list %cleanup bytes)
            (or %finp2p_admin
               (or (address %update_admin)
                   (pair %update_fa2_token bytes (pair (address %address) (nat %id))))
               (nat %update_operation_ttl)))
        (or %finp2p_asset
           (or (pair %issue_tokens
                  (pair (pair (nat %amount) (bytes %asset_id))
                        (pair (key %dst_account)
                              (option %new_token_info (pair (pair (address %address) (nat %id)) (map string bytes)))))
                  (pair (pair (pair %nonce (bytes %nonce) (timestamp %timestamp)) (bytes %shg))
                        (option %signature signature)))
               (pair %redeem_tokens
                  (pair (pair (nat %amount) (bytes %asset_id))
                        (pair (pair %nonce (bytes %nonce) (timestamp %timestamp))
                              (option %signature signature)))
                  (key %src_account)))
           (pair %transfer_tokens
              (pair (pair (nat %amount) (bytes %asset_id))
                    (pair (key %dst_account) (pair %nonce (bytes %nonce) (timestamp %timestamp))))
              (pair (pair (bytes %shg) (signature %signature)) (key %src_account))))) ;
  storage
    (pair (pair (address %admin)
                (big_map %finp2p_assets bytes (pair (address %address) (nat %id))))
          (pair (big_map %live_operations bytes timestamp) (nat %operation_ttl))) ;
  code { PUSH string "FINP2P_PASSED_OR_EXPIRED_OPERATION" ;
         PUSH string "FINP2P_UNKNOWN_ASSET_ID" ;
         PUSH string "INVALID_FA2_CONTRACT" ;
         DUP ;
         LAMBDA
           (pair string address)
           (contract (list (pair address (list (pair address (pair nat nat))))))
           { UNPAIR ;
             SWAP ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair address (big_map bytes (pair address nat)))
                 (pair (big_map bytes timestamp) nat))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "FINP2P_UNAUTHORIZED_ACTION" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair timestamp
                 (pair (pair address (big_map bytes (pair address nat)))
                       (pair (big_map bytes timestamp) nat)))
           bool
           { UNPAIR ; SWAP ; CDR ; CDR ; INT ; ADD ; NOW ; COMPARE ; GT } ;
         DUP ;
         LAMBDA
           (pair (lambda
                    (pair timestamp
                          (pair (pair address (big_map bytes (pair address nat)))
                                (pair (big_map bytes timestamp) nat)))
                    bool)
                 (pair timestamp
                       (pair (pair address (big_map bytes (pair address nat)))
                             (pair (big_map bytes timestamp) nat))))
           bool
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             DUP ;
             DIG 2 ;
             SWAP ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             NOT ;
             NOW ;
             DIG 2 ;
             COMPARE ;
             GE ;
             AND } ;
         SWAP ;
         APPLY ;
         LAMBDA key address { HASH_KEY ; IMPLICIT_ACCOUNT ; ADDRESS } ;
         DIG 8 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DIG 3 ;
             DIG 7 ;
             DIG 8 ;
             DIG 9 ;
             DROP 5 ;
             IF_LEFT
               { DIG 3 ;
                 DIG 4 ;
                 DROP 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 ITER { SWAP ;
                        DUP ;
                        DUP 3 ;
                        GET ;
                        IF_NONE
                          { SWAP ; DROP }
                          { DUP 4 ;
                            SWAP ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            IF { SWAP ; NONE timestamp ; SWAP ; UPDATE } { SWAP ; DROP } } } ;
                 DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         PAIR }
                       { UNPAIR ;
                         DIG 3 ;
                         DUG 2 ;
                         PAIR 3 ;
                         LAMBDA
                           (pair (pair bytes
                                       (pair (pair address nat)
                                             (lambda address (contract (list (pair address (list (pair address (pair nat nat)))))))))
                                 (pair (pair address (big_map bytes (pair address nat)))
                                       (pair (big_map bytes timestamp) nat)))
                           (pair (pair address (big_map bytes (pair address nat)))
                                 (pair (big_map bytes timestamp) nat))
                           { UNPAIR ;
                             UNPAIR 3 ;
                             DIG 3 ;
                             DUP 3 ;
                             CAR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DIG 4 ;
                             DIG 4 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR } ;
                         SWAP ;
                         APPLY ;
                         SWAP ;
                         EXEC } }
                   { DIG 2 ; DROP ; SWAP ; DUP ; DUG 2 ; CDR ; CAR ; PAIR ; SWAP ; CAR ; PAIR } ;
                 NIL operation ;
                 PAIR } }
           { DIG 4 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DROP ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     SWAP ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     IF { DIG 5 ; FAILWITH } { DIG 5 ; DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     PACK ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     IF_NONE
                       { DUP ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE
                           { DIG 4 ; FAILWITH }
                           { DIG 5 ; DROP ; NONE (map string bytes) ; SWAP ; PAIR } }
                       { DIG 5 ;
                         DROP ;
                         UNPAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE
                           { SWAP ; SOME ; SWAP ; PAIR }
                           { DROP 3 ; PUSH string "FINP2P_ASSET_ALREADY_EXISTS" ; FAILWITH } } ;
                     UNPAIR ;
                     DUP ;
                     CDR ;
                     DIG 2 ;
                     NIL (pair address nat) ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     PAIR ;
                     CONS ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     CONTRACT %mint
                       (pair (nat %token_id)
                             (pair (option %token_info (map string bytes)) (list %owners (pair address nat)))) ;
                     IF_NONE { DIG 2 ; FAILWITH } { DIG 3 ; DROP } ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     SWAP ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     IF { DIG 5 ; FAILWITH } { DIG 5 ; DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     PACK ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     GET ;
                     IF_NONE { DIG 4 ; FAILWITH } { DIG 5 ; DROP } ;
                     DUP ;
                     CDR ;
                     NIL (pair address nat) ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     CDR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     PAIR ;
                     CONS ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     CONTRACT %burn (pair (nat %token_id) (list %owners (pair address nat))) ;
                     IF_NONE { DIG 2 ; FAILWITH } { DIG 3 ; DROP } ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } }
               { DIG 5 ;
                 DROP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 SWAP ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 NOT ;
                 IF { DIG 5 ; FAILWITH } { DIG 5 ; DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DUP 4 ;
                 PACK ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 GET ;
                 IF_NONE { DIG 4 ; FAILWITH } { DIG 5 ; DROP } ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 DUP 5 ;
                 SWAP ;
                 EXEC ;
                 NIL (pair address (pair nat nat)) ;
                 DUP 5 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 DUP 4 ;
                 CDR ;
                 DIG 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 DIG 3 ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }

